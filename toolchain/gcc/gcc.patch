--- gcc-10.2.0-orig/config.sub	2021-02-20 23:40:53.937802957 -0500
+++ gcc-10.2.0/config.sub	2021-02-20 23:41:28.377865152 -0500
@@ -1366,7 +1366,7 @@
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
 	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
-	     | nsk* | powerunix)
+	     | nsk* | powerunix | fos*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
--- gcc-10.2.0-orig/fixincludes/mkfixinc.sh	2021-02-20 23:40:52.764467445 -0500
+++ gcc-10.2.0/fixincludes/mkfixinc.sh	2021-02-20 23:49:21.345132871 -0500
@@ -11,6 +11,7 @@
 
 # Check for special fix rules for particular targets
 case $machine in
+    *-fos* | \
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
--- gcc-10.2.0-orig/gcc/config/fos.h	1969-12-31 19:00:00.000000000 -0500
+++ gcc-10.2.0/gcc/config/fos.h	2021-02-20 23:45:40.274900383 -0500
@@ -0,0 +1,28 @@
+/* Useful if you wish to make target-specific GCC changes. */
+#undef TARGET_MYOS
+#define TARGET_MYOS 1
+ 
+/* Default arguments you want when running your
+   i686-fos-gcc/x86_64-fos-gcc toolchain */
+#undef LIB_SPEC
+#define LIB_SPEC "-lc" /* link against C standard library */
+ 
+/* Files that are linked before user code.
+   The %s tells GCC to look for these files in the library directory. */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "crt0.o%s crti.o%s crtbegin.o%s"
+ 
+/* Files that are linked after user code. */
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "crtend.o%s crtn.o%s"
+ 
+/* Additional predefined macros. */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()      \
+  do {                                \
+    builtin_define ("__fos__");      \
+    builtin_define ("__unix__");      \
+    builtin_assert ("system=fos");   \
+    builtin_assert ("system=unix");   \
+    builtin_assert ("system=posix");   \
+  } while(0);
--- gcc-10.2.0-orig/gcc/config.gcc	2021-02-20 23:40:53.917802921 -0500
+++ gcc-10.2.0/gcc/config.gcc	2021-02-20 23:44:16.088125370 -0500
@@ -675,6 +675,12 @@
 
 # Common parts for widely ported systems.
 case ${target} in
+*-*-fos*)
+  gas=yes
+  gnu_ld=yes
+  default_use_cxz_atexit=yes
+  use_gcc_stdint=wrap
+  ;;
 *-*-darwin*)
   tmake_file="t-darwin "
   tm_file="${tm_file} darwin.h"
@@ -1033,6 +1039,12 @@
 esac
 
 case ${target} in
+i[34567]86-*-fos*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h glibc-stdint.h i386/i386elf.h fos.h"
+	;;
+x86_64-*-fos*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h glibc-stdint.h i386/i386elf.h i386/x86-64.h fos.h"
+	;;
 aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
 	tm_file="${tm_file} dbxelf.h elfos.h newlib-stdint.h"
 	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-elf-raw.h"
--- gcc-10.2.0-orig/libgcc/config.host	2021-02-20 23:40:52.747800747 -0500
+++ gcc-10.2.0/libgcc/config.host	2021-02-20 23:48:50.498437529 -0500
@@ -359,6 +367,14 @@
 esac
 
 case ${host} in
+i[34567]86-*-fos*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
+x86_64-*-fos*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtend.o crtn.o"
+	tmake_file="$tmake_file i386/t-crtstuff t-crtstuff-pic t-libgcc-pic"
+	;;
 aarch64*-*-elf | aarch64*-*-rtems*)
 	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
 	extra_parts="$extra_parts crtfastmath.o"
--- gcc-10.2.0-orig/libstdc++-v3/crossconfig.m4	2021-02-20 23:40:52.544467035 -0500
+++ gcc-10.2.0/libstdc++-v3/crossconfig.m4	2021-02-20 23:46:44.904975413 -0500
@@ -5,6 +5,12 @@
 AC_DEFUN([GLIBCXX_CROSSCONFIG],[
 # Base decisions on target environment.
 case "${host}" in
+  *-fos*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
   arm*-*-symbianelf*)
     # This is a freestanding configuration; there is nothing to do here.
     ;;
